import React from 'react';
import { Box, Typography, styled, Avatar } from '@mui/material';
import { Face, Psychology, Favorite, SentimentSatisfied, SentimentNeutral, SentimentDissatisfied } from '@mui/icons-material';

const CardContainer = styled(Box)(({ theme }) => ({
  width: '400px',
  minHeight: '600px',
  background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)',
  borderRadius: '20px',
  overflow: 'hidden',
  position: 'relative',
  boxShadow: '0 10px 30px rgba(0,0,0,0.3)',
  border: '2px solid rgba(255,255,255,0.1)',
  '&:before': {
    content: '""',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: '100%',
    background: 'linear-gradient(135deg, rgba(9, 194, 247, 0.1) 0%, rgba(250, 14, 164, 0.1) 100%)',
    zIndex: 1
  }
}));

const CardHeader = styled(Box)(({ theme }) => ({
  position: 'relative',
  zIndex: 2,
  padding: theme.spacing(3),
  textAlign: 'center',
  background: 'rgba(0,0,0,0.5)',
  backdropFilter: 'blur(10px)'
}));

const FeatureBar = styled(Box)(({ theme, value }) => ({
  height: '8px',
  background: 'rgba(255,255,255,0.1)',
  borderRadius: '4px',
  position: 'relative',
  overflow: 'hidden',
  '&:after': {
    content: '""',
    position: 'absolute',
    top: 0,
    left: 0,
    height: '100%',
    width: `${value}%`,
    background: 'linear-gradient(90deg, #09c2f7, #fa0ea4)',
    borderRadius: '4px'
  }
}));

const ShareableRatingCard = ({ userInfo, rating, testScores }) => {
  const getTierLabel = (rating) => {
    if (rating >= 80) return { label: 'Very Attractive', icon: <Favorite /> };
    if (rating >= 60) return { label: 'Attractive', icon: <SentimentSatisfied /> };
    if (rating >= 40) return { label: 'Average', icon: <SentimentNeutral /> };
    return { label: 'Below Average', icon: <SentimentDissatisfied /> };
  };

  const tier = getTierLabel(rating);

  const formatHeight = (inches) => {
    const feet = Math.floor(inches / 12);
    const remainingInches = inches % 12;
    return `${feet}'${remainingInches}"`;
  };

  return (
    <CardContainer>
      <CardHeader>
        <Box sx={{ 
          display: 'flex', 
          alignItems: 'center', 
          justifyContent: 'center',
          mb: 2
        }}>
          <Typography variant="h1" sx={{ 
            color: '#fff', 
            fontWeight: 'bold',
            fontSize: '4rem',
            textShadow: '0 2px 4px rgba(0,0,0,0.3)'
          }}>
            {rating.toFixed(1)}
          </Typography>
        </Box>

        {userInfo?.displayName && (
          <Box sx={{ textAlign: 'center' }}>
            <Typography variant="h4" sx={{ 
              color: '#fff', 
              fontWeight: 'bold',
              textShadow: '0 2px 4px rgba(0,0,0,0.3)',
              mb: 1
            }}>
              {userInfo.displayName}
            </Typography>
            <Typography variant="body2" sx={{ 
              color: 'rgba(255,255,255,0.7)',
              textTransform: 'capitalize'
            }}>
              {userInfo.gender} • {userInfo.ethnicity} • {userInfo.eyeColor} eyes
            </Typography>
            <Typography variant="body2" sx={{ 
              color: 'rgba(255,255,255,0.7)'
            }}>
              {formatHeight(userInfo.height)} • {userInfo.weight} lbs
            </Typography>
          </Box>
        )}

        <Box sx={{ 
          display: 'flex', 
          alignItems: 'center', 
          justifyContent: 'center',
          mt: 2,
          gap: 1
        }}>
          {tier.icon}
          <Typography variant="h6" sx={{ 
            color: '#fff',
            fontWeight: 'bold'
          }}>
            {tier.label}
          </Typography>
        </Box>
      </CardHeader>

      <Box sx={{ 
        p: 3,
        position: 'relative',
        zIndex: 2,
        background: 'rgba(0,0,0,0.5)',
        backdropFilter: 'blur(10px)',
        display: 'flex',
        flexDirection: 'column',
        gap: 2
      }}>
        {testScores && Object.entries(testScores).map(([feature, score]) => (
          <Box key={feature} sx={{ mb: 1 }}>
            <Box sx={{ 
              display: 'flex', 
              justifyContent: 'space-between',
              mb: 0.5
            }}>
              <Typography variant="body2" sx={{ color: '#fff' }}>
                {feature}
              </Typography>
              <Typography variant="body2" sx={{ color: '#fff' }}>
                {score.toFixed(1)}
              </Typography>
            </Box>
            <FeatureBar value={score} />
          </Box>
        ))}

        <Box sx={{ 
          mt: 2,
          textAlign: 'center',
          pt: 2,
          borderTop: '1px solid rgba(255,255,255,0.1)'
        }}>
          <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.5)' }}>
            Generated by Lookzapp.com
          </Typography>
        </Box>
      </Box>
    </CardContainer>
  );
};

export default ShareableRatingCard;